{"version":3,"sources":["components/Dashboard/Controls/controls.module.css","components/Dashboard/Balance/balance.module.css","components/Dashboard/TransactionHistory/transactionHistory.module.css","utils/checkInput.js","utils/calculateBalance.js","components/Dashboard/Controls/Controls.jsx","utils/calculateType.js","components/Dashboard/Balance/Balance.jsx","components/Dashboard/TransactionHistory/TransactionHistory.jsx","components/Dashboard/Dashboard.jsx","components/App/App.jsx","index.js"],"names":["module","exports","checkCorrectInput","inputValue","inputName","balance","toast","warn","position","POSITION","BOTTOM_LEFT","error","transactions","reduce","transaction","type","amount","Controls","state","input","e","calculateBalance","this","props","parseInt","target","name","id","uuid","date","Date","toLocaleString","addTransaction","setState","value","className","styles","controls","onSubmit","evt","preventDefault","placeholder","onChange","onInputChange","onClick","onButtonClick","Component","Balance","calculateMount","history","map","key","length","colSpan","Dashboard","prevState","TransactionHistory","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7cf6e63.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"controls_controls__2TdVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"balance_balance___QVPh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"transactionHistory_history__3jazv\"};","import { toast } from 'react-toastify';\n\nconst checkCorrectInput = (inputValue, inputName, balance) => {\n  if (inputValue < 0) {\n    toast.warn('Сумма не может быть отрицательной!', {\n      position: toast.POSITION.BOTTOM_LEFT,\n    });\n    return false;\n  }\n  if (!inputValue) {\n    toast.warn('Введите сумму для проведения операции!', {\n      position: toast.POSITION.BOTTOM_LEFT,\n    });\n    return false;\n  }\n  if (inputValue > balance && inputName === 'withdraw') {\n    toast.error('На счету недостаточно средств для проведения операции!', {\n      position: toast.POSITION.BOTTOM_LEFT,\n    });\n    return false;\n  }\n  return true;\n};\n\nexport default checkCorrectInput;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-return-assign */\nexport default transactions =>\n  transactions.reduce(\n    (balance, transaction) =>\n      (balance +=\n        transaction.type === 'deposit'\n          ? transaction.amount\n          : -transaction.amount),\n    0,\n  );\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport uuid from 'uuid/v4';\nimport checkCorrectInput from '../../../utils/checkInput';\nimport calculateBalance from '../../../utils/calculateBalance';\nimport styles from './controls.module.css';\n\nclass Controls extends Component {\n  state = {\n    input: ''\n  };\n\n  onButtonClick(e) {\n    const balance = calculateBalance(this.props.transactions);\n    const input = parseInt(this.state.input) || 0;\n\n    if (checkCorrectInput(input, e.target.name, balance)) {\n      const transaction = {\n        id: uuid(),\n        type: e.target.name,\n        amount: input,\n        date: new Date().toLocaleString(),\n      };\n      this.props.addTransaction(transaction);\n    }\n\n    this.setState({ input: '' });\n  }\n\n  onInputChange(e) {\n    this.setState({ input: e.target.value });\n  }\n\n  render() {\n    return (\n      <section className={styles.controls}>\n        <form className=\"form\" onSubmit={evt => evt.preventDefault()}>\n          <input\n            type=\"number\"\n            value={this.state.input}\n            placeholder=\"Enter your amount\"\n            onChange={e => this.onInputChange(e)}\n          />\n          <button type=\"button\" name=\"deposit\" onClick={e => this.onButtonClick(e)}>\n            Deposit\n          </button>\n          <button type=\"button\" name=\"withdraw\" onClick={e => this.onButtonClick(e)}>\n            Withdraw\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\n\nControls.propTypes = {\n  addTransaction: PropTypes.func.isRequired,\n};\n\nexport default Controls;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-return-assign */\nexport default (transactions, type) =>\n  transactions.reduce(\n    (balance, transaction) =>\n      (balance += transaction.type === type ? transaction.amount : 0),\n    0,\n  );\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './balance.module.css';\nimport calculateBalance from '../../../utils/calculateBalance';\nimport calculateMount from '../../../utils/calculateType';\n\nconst Balance = ({ transactions }) => (\n  <section className={styles.balance}>\n    <span>⬆{calculateMount(transactions, 'deposit')}$</span>\n    <span>⬇{calculateMount(transactions, 'withdraw')}$</span>\n    <span>Balance: {calculateBalance(transactions)}$</span>\n  </section>\n);\n\nBalance.propTypes = {\n  transactions: PropTypes.arrayOf(PropTypes.any).isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './transactionHistory.module.css';\r\n\r\nconst Balance = ({ transactions }) => (\r\n  <table className={styles.history}>\r\n    <thead>\r\n      <tr>\r\n        <th>Transaction</th>\r\n        <th>Amount</th>\r\n        <th>Date</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {transactions.map(({ id, type, amount, date }) => (\r\n        <tr key={id}>\r\n          <td>{type}</td>\r\n          <td>${amount}</td>\r\n          <td>{date}</td>\r\n        </tr>\r\n      ))}\r\n      {!transactions.length && (\r\n        <tr>\r\n          <td colSpan=\"3\">-</td>\r\n        </tr>\r\n      )}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nBalance.propTypes = {\r\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default Balance;\r\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Controls from './Controls/Controls';\nimport Balance from './Balance/Balance';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\n\nclass Dashboard extends Component {\n  state = {\n    transactions: [],\n  };\n\n  addTransaction = transaction => {\n    this.setState(prevState => ({\n      transactions: [...prevState.transactions, transaction],\n    }));\n  };\n\n  render() {\n    const { transactions } = this.state;\n    return (\n      <div>\n        <Controls transactions={transactions} addTransaction={this.addTransaction} />\n        <Balance transactions={transactions} />\n        <TransactionHistory transactions={transactions} />\n        <ToastContainer />\n      </div>\n    );\n  }\n}\nexport default Dashboard;\n","import React from 'react';\r\nimport './styles.css';\r\nimport Dashboard from '../Dashboard/Dashboard.jsx';\r\n\r\nconst App = () => <Dashboard />;\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}